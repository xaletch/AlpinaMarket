import React, { useCallback, useState } from 'react'

import debounce from 'lodash/debounce';

import { Link } from "react-router-dom";
import { useDispatch } from 'react-redux';
import { setSearchValue } from '../../../../redux/slice/SearchSlice';

export const SearchMenu = ({ isSearchOpen, setIsSearchOpen, searchValue, products, inputRef }) => {
  const dispatch = useDispatch();
  const [value, setValue] = useState('');

  const handleClickClose = () => {
    setIsSearchOpen(false);
    setValue('');
    dispatch(setSearchValue(''));
  };

  // eslint-disable-next-line react-hooks/exhaustive-deps
  const updateSearchInput = useCallback(
    debounce((e: any) => {
      dispatch(setSearchValue(e));
    }, 350),
    [],
  );

  const searchInput = (e: any) => {
    setValue(e.target.value);
      updateSearchInput(e.target.value);
  };
  
  const handleClickSearchProduct = () => {
    setIsSearchOpen(false);
    setValue('');
    dispatch(setSearchValue(''));
  };

  const filteredProducts = products.slice(0, 4);

  return (
    <>
      {isSearchOpen && (
        <div className='search__menu'>
          <div className='search__menu--content'>
          <div className='header__bottom--center search__menu--logo logo flex'>
            <svg width="82" height="32" viewBox="0 0 82 32" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M4.57747 12.9409V11.7319C4.57747 11.527 4.7435 11.361 4.94835 11.361H10.9245V13.3118H4.94835C4.7435 13.3118 4.57747 13.1457 4.57747 12.9409ZM12.2102 4.85818H1.84036V7.44454H10.5536C10.7584 7.44454 10.9245 7.61046 10.9245 7.81543V9.16285H3.29418C1.99617 9.16285 0.945312 10.2161 0.945312 11.5118V13.7445C0.945312 15.0418 1.99699 16.0934 3.29418 16.0934H14.5591V7.20711C14.5591 5.90981 13.5075 4.85818 12.2102 4.85818Z" fill="black"/>
              <path d="M35.7638 7.50355C35.689 7.45971 35.5466 7.43607 35.3383 7.43607H28.7677V13.3126H35.3383C35.5484 13.3126 35.689 13.287 35.7638 13.234C35.8388 13.1812 35.8771 13.0588 35.8771 12.8652V7.88521C35.8771 7.67531 35.8388 7.54918 35.7638 7.50355ZM28.7677 20.4894H25.1338V4.85749H35.6305C36.3171 4.85749 36.9088 4.90312 37.4019 4.99259C37.8949 5.08221 38.2986 5.25007 38.6126 5.49664C38.9268 5.7432 39.1549 6.08836 39.2974 6.52837C39.438 6.97048 39.5092 7.53467 39.5092 8.22124V12.7301C39.5092 13.4332 39.438 14.0011 39.2974 14.4339C39.1549 14.8686 38.9268 15.2082 38.6126 15.4547C38.2986 15.7012 37.8949 15.8692 37.4019 15.9588C36.9088 16.0481 36.3171 16.0939 35.6305 16.0939H28.7677V20.4894Z" fill="black"/>
              <path d="M60.1892 7.88507C60.1892 7.67516 60.1509 7.54904 60.0759 7.5034C60.0011 7.45957 59.8587 7.43593 59.6506 7.43593H54.0423V16.0938H50.4102V4.85734H59.941C60.6295 4.85734 61.2193 4.90298 61.7142 4.99244C62.2073 5.08206 62.6108 5.24993 62.9249 5.49649C63.2389 5.74305 63.4672 6.08821 63.6078 6.52823C63.7503 6.97033 63.8215 7.53452 63.8215 8.2211V16.0938H60.1892V7.88507Z" fill="black"/>
              <path d="M71.0501 12.9414V11.7323C71.0501 11.5275 71.2161 11.3615 71.421 11.3615H77.3972V13.3123H71.421C71.2161 13.3123 71.0501 13.1462 71.0501 12.9414ZM78.6828 4.85867H68.313V7.44503H77.0261C77.231 7.44503 77.3972 7.61095 77.3972 7.81592V9.16334H69.7669C68.4687 9.16334 67.418 10.2166 67.418 11.5123V13.7449C67.418 15.0422 68.4696 16.0939 69.7669 16.0939H81.0317V7.20759C81.0317 5.9103 79.9801 4.85867 78.6828 4.85867Z" fill="black"/>
              <path d="M21.4984 16.0938H17.8643V0.461704H21.4984V16.0938Z" fill="black"/>
              <path d="M46.7747 16.0942H43.1406V4.85783H46.7747V16.0942Z" fill="black"/>
              <path d="M10.5968 31.0551V27.6515C10.5968 27.3096 10.5992 26.9625 10.6047 26.6102C10.6097 26.258 10.6225 25.9366 10.6435 25.6467H10.6124C10.5709 25.7088 10.5087 25.7969 10.4259 25.9106C10.3428 26.0248 10.2494 26.1518 10.1462 26.2914C10.0424 26.4314 9.93619 26.5765 9.82743 26.7266C9.71867 26.877 9.61768 27.0092 9.52447 27.1231L7.34864 29.8429H6.6648L4.5199 27.1541C4.42674 27.0402 4.32301 26.908 4.20916 26.7577C4.09491 26.6077 3.98381 26.46 3.87482 26.3147C3.76605 26.1699 3.66763 26.0378 3.57967 25.9185C3.49137 25.7995 3.42662 25.7088 3.38536 25.6467H3.35439C3.37478 25.916 3.38787 26.2242 3.39318 26.5712C3.39821 26.9185 3.4009 27.2577 3.4009 27.5893V31.0551H0.945312V22.8799H3.63409L5.77881 25.631C5.86163 25.745 5.96262 25.8773 6.08189 26.0273C6.20084 26.1775 6.31737 26.3304 6.43162 26.4857C6.54541 26.6412 6.65698 26.7914 6.76573 26.9365C6.87456 27.0817 6.95995 27.1955 7.02212 27.2784H7.05327C7.11545 27.1853 7.19559 27.0712 7.29424 26.9365C7.39248 26.802 7.49873 26.6594 7.61275 26.5092C7.72653 26.359 7.84061 26.2061 7.95469 26.0507C8.06854 25.8952 8.1773 25.7553 8.28099 25.631L10.4259 22.8799H13.0525V31.0551H10.5968Z" fill="black"/>
              <path d="M21.9903 25.2887L20.4206 27.8841H23.591L21.9903 25.2887ZM25.394 31.0547L24.4459 29.423H19.5658L18.6023 31.0547H15.8047L20.9023 22.8796H23.1716L28.2691 31.0547H25.394Z" fill="black"/>
              <path d="M38.4913 24.9932C38.4913 24.8174 38.4548 24.7086 38.3826 24.6671C38.3099 24.6257 38.2011 24.6049 38.056 24.6049H33.5335V26.6719H38.056C38.2217 26.6719 38.3359 26.6486 38.3978 26.6019C38.4601 26.5554 38.4913 26.4492 38.4913 26.2834V24.9932ZM38.3978 31.0547L35.6937 28.4125H33.5335V31.0547H31.0156V22.8796H38.3048C38.8332 22.8796 39.2657 22.9162 39.6024 22.9884C39.9392 23.0612 40.2032 23.1828 40.3953 23.3536C40.5867 23.5246 40.7216 23.7474 40.7991 24.022C40.8769 24.2967 40.9158 24.6414 40.9158 25.0555V26.2834C40.9158 26.5841 40.882 26.8638 40.8147 27.1227C40.7474 27.3817 40.6283 27.6045 40.4573 27.791C40.2863 27.9774 40.0557 28.1249 39.7659 28.2339C39.4755 28.3425 39.113 28.3971 38.6779 28.3971L41.5686 31.0547H38.3978Z" fill="black"/>
              <path d="M51.9986 31.0551L47.1341 27.8691V31.0551H44.6162V22.8799H47.1341V25.8175L51.7034 22.8799H55.3712L49.2478 26.7812L55.9463 31.0551H51.9986Z" fill="black"/>
              <path d="M58.6533 31.0551V22.8799H68.0716V24.6053H61.171V26.0818H65.8336V27.6048H61.171V29.2678H68.1494V31.0551H58.6533Z" fill="black"/>
              <path d="M74.5374 31.0547V24.6049H70.5586V22.8796H81.0339V24.6049H77.0553V31.0547H74.5374Z" fill="black"/>
            </svg>
          </div>
          <div className='search__menu--close' onClick={handleClickClose}>
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M10.7631 12.1771L10.8691 12.071L10.7631 11.9649L5.21213 6.414L6.414 5.21213L11.9649 10.7631L12.071 10.8691L12.1771 10.7631L17.728 5.21213L18.9299 6.414L13.3789 11.9649L13.2729 12.071L13.3789 12.1771L18.9299 17.728L17.728 18.9299L12.1771 13.3789L12.071 13.2729L11.9649 13.3789L6.414 18.9299L5.21213 17.728L10.7631 12.1771Z" fill="black" fillOpacity="0.38" stroke="white" strokeWidth="0.3"/>
          </svg>
          </div>
          <div className='search__menu--content'>
          <div className='search__menu--input'>
            <input ref={inputRef} type="text" value={value} onChange={searchInput} />
            <svg className='search__menu--input__svg' width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
              <mask id="path-1-inside-1_10902_122502" fill="white">
                <path fillRule="evenodd" clipRule="evenodd" d="M15.5197 13.9709H14.7273L14.4519 13.6975C15.4249 12.5629 16.0166 11.092 16.0166 9.48035C16.0166 5.8979 13.1127 2.99402 9.53028 2.99402C5.94783 2.99402 3.04395 5.8979 3.04395 9.48035C3.04395 13.0628 5.94783 15.9667 9.53028 15.9667C11.1419 15.9667 12.6118 15.3759 13.7464 14.404L14.0218 14.6774V15.4677L19.0093 20.4482L20.4972 18.9604L15.5197 13.9709ZM9.53054 13.9712C7.04976 13.9712 5.04 11.9615 5.04 9.48069C5.04 7.00091 7.04976 4.99015 9.53054 4.99015C12.0103 4.99015 14.0211 7.00091 14.0211 9.48069C14.0211 11.9615 12.0103 13.9712 9.53054 13.9712Z"/>
              </mask>
              <path fillRule="evenodd" clipRule="evenodd" d="M15.5197 13.9709H14.7273L14.4519 13.6975C15.4249 12.5629 16.0166 11.092 16.0166 9.48035C16.0166 5.8979 13.1127 2.99402 9.53028 2.99402C5.94783 2.99402 3.04395 5.8979 3.04395 9.48035C3.04395 13.0628 5.94783 15.9667 9.53028 15.9667C11.1419 15.9667 12.6118 15.3759 13.7464 14.404L14.0218 14.6774V15.4677L19.0093 20.4482L20.4972 18.9604L15.5197 13.9709ZM9.53054 13.9712C7.04976 13.9712 5.04 11.9615 5.04 9.48069C5.04 7.00091 7.04976 4.99015 9.53054 4.99015C12.0103 4.99015 14.0211 7.00091 14.0211 9.48069C14.0211 11.9615 12.0103 13.9712 9.53054 13.9712Z" fill="black" fillOpacity="0.38"/>
              <path d="M14.7273 13.9709V14.2709H14.6037L14.516 14.1838L14.7273 13.9709ZM14.4519 13.6975L14.2405 13.9104L14.0426 13.7139L14.2242 13.5022L14.4519 13.6975ZM13.7464 14.404L13.5512 14.1761L13.7614 13.9961L13.9578 14.1911L13.7464 14.404ZM14.0218 14.6774L14.2332 14.4645L14.3218 14.5525V14.6774H14.0218ZM14.0218 15.4677L13.8098 15.68L13.7218 15.5921V15.4677H14.0218ZM19.0093 20.4482L19.2214 20.6604L19.0094 20.8724L18.7973 20.6605L19.0093 20.4482ZM20.4972 18.9604L20.7096 18.7485L20.9212 18.9606L20.7093 19.1725L20.4972 18.9604ZM15.5197 14.2709H14.7273V13.6709H15.5197V14.2709ZM14.516 14.1838L14.2405 13.9104L14.6633 13.4846L14.9387 13.758L14.516 14.1838ZM14.2242 13.5022C15.1527 12.4193 15.7166 11.017 15.7166 9.48035H16.3166C16.3166 11.167 15.697 12.7064 14.6796 13.8928L14.2242 13.5022ZM15.7166 9.48035C15.7166 6.06359 12.947 3.29402 9.53028 3.29402V2.69402C13.2784 2.69402 16.3166 5.73222 16.3166 9.48035H15.7166ZM9.53028 3.29402C6.11351 3.29402 3.34395 6.06359 3.34395 9.48035H2.74395C2.74395 5.73222 5.78214 2.69402 9.53028 2.69402V3.29402ZM3.34395 9.48035C3.34395 12.8971 6.11351 15.6667 9.53028 15.6667V16.2667C5.78214 16.2667 2.74395 13.2285 2.74395 9.48035H3.34395ZM9.53028 15.6667C11.067 15.6667 12.4684 15.1037 13.5512 14.1761L13.9416 14.6318C12.7552 15.6481 11.2168 16.2667 9.53028 16.2667V15.6667ZM13.9578 14.1911L14.2332 14.4645L13.8105 14.8903L13.535 14.6169L13.9578 14.1911ZM14.3218 14.6774V15.4677H13.7218V14.6774H14.3218ZM14.2338 15.2555L19.2213 20.236L18.7973 20.6605L13.8098 15.68L14.2338 15.2555ZM18.7972 20.2361L20.285 18.7482L20.7093 19.1725L19.2214 20.6604L18.7972 20.2361ZM20.2848 19.1723L15.3073 14.1828L15.732 13.759L20.7096 18.7485L20.2848 19.1723ZM9.53054 14.2712C6.88408 14.2712 4.74 12.1271 4.74 9.48069H5.34C5.34 11.7958 7.21545 13.6712 9.53054 13.6712V14.2712ZM4.74 9.48069C4.74 6.83527 6.88403 4.69015 9.53054 4.69015V5.29015C7.21549 5.29015 5.34 7.16655 5.34 9.48069H4.74ZM9.53054 4.69015C12.176 4.69015 14.3211 6.83523 14.3211 9.48069H13.7211C13.7211 7.1666 11.8446 5.29015 9.53054 5.29015V4.69015ZM14.3211 9.48069C14.3211 12.1272 12.176 14.2712 9.53054 14.2712V13.6712C11.8447 13.6712 13.7211 11.7957 13.7211 9.48069H14.3211Z" fill="#F6F6F6" mask="url(#path-1-inside-1_10902_122502)"/>
            </svg>
          </div>
          {searchValue && (
            <div className='search__menu--found--item flex'>
              {filteredProducts.map((item, index) => (
                  <div key={index} className='search__menu--found--item__card flex' onClick={handleClickSearchProduct}>
                    <Link to={`product/${item.id}`} className='search__menu--found--item__card--link flex'>
                    <div className='search__menu--found--item__card--left'>
                      <p className='search__menu--found--item__card--title'>{item.title}</p>
                      <span className='search__menu--found--item__card--price'>{item.price} ₽</span>
                    </div>
                    <img className='search__menu--found--item__card--img' src={item.img} alt="error" />
                    </Link>
                  </div>
              ))}
            </div>
          )}
          {products.length > 4 && searchValue && (
            <div className='search__menu--found--search-all__block' onClick={handleClickSearchProduct}>
              <Link className='search__menu--found--search-all' to='search_all'>ВСЕ РЕЗУЛЬТАТЫ ПОИСКА</Link>
            </div>
          )}
        </div>
        </div>
        </div>
      )}
    </>
  )
}

